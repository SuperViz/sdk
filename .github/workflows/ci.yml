name: Publish SDK Package
on:
  push:
    branches:
      - main
      - beta
      - lab
jobs:
  development:
    if: "github.ref == 'refs/heads/beta'"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Install dependencies
        run: yarn install
      - name: Build package
        run: |
          touch .version.js && echo "echo \"export const version = 'beta'\" > .version.js" | bash -
          yarn build
      - name: Push
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: beta-release
          FOLDER: dist
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MESSAGE: 'BUILD: ({sha}) {msg}'
  lab:
    if: "github.ref == 'refs/heads/lab'"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Install dependencies
        run: yarn install
      - name: Build package
        run: |
          touch .version.js && echo "echo \"export const version = 'lab'\" > .version.js" | bash -
          yarn build
      - name: Push
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: lab-release
          FOLDER: dist
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MESSAGE: 'BUILD: ({sha}) {msg}'
  main:
    if: "github.ref == 'refs/heads/main'"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      #      - name: Build and run e2e tests
      #        env:
      #          E2E_BASE_URL: ${{ secrets.E2E_BASE_URL }}
      #          E2E_ROOM_ID: ${{ secrets.E2E_ROOM_ID }}
      #          E2E_USER_NAME: ${{ secrets.E2E_USER_NAME }}
      #          E2E_USER_ID: ${{ secrets.E2E_USER_ID }}
      #        run: source ./e2e/build-e2e.sh
      - name: Install dependencies
        run: yarn install
        env:
          NPM_CONFIG_USERCONFIG: .npmrc.ci
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - run: git config --global user.name SuperViz
      - run: git config --global user.email ci@superviz.com
      - name: Publish npm package
        run: npm whoami && npm run semantic-release
        env:
          NPM_CONFIG_USERCONFIG: .npmrc.ci
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  slackNotificationDev:
    needs: development
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: https://avatars.slack-edge.com/2020-11-18/1496892993975_af721d1c045bea2d5a46_48.png
          MSG_MINIMAL: true
          SLACK_USERNAME: Deploy BETA SDK
  slackNotificationLab:
    needs: lab
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: https://avatars.slack-edge.com/2020-11-18/1496892993975_af721d1c045bea2d5a46_48.png
          MSG_MINIMAL: true
          SLACK_USERNAME: Deploy LAB SDK
  slackNotificationProd:
    needs: main
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_ICON: https://avatars.slack-edge.com/2020-11-18/1496892993975_af721d1c045bea2d5a46_48.png
          MSG_MINIMAL: true
          SLACK_USERNAME: Deploy SDK
